pipeline{
    agent any
    tools {
        maven 'maven'
    }
    
    def server = Artifactory.server "artifactory"
    def rtMaven = Artifactory.newMavenBuild()
    rtMaven.tool = "maven"
    
    stages{
        stage("Source Control -Git Checkout"){
            steps{
                git url: 'https://github.com/amaitisears/WebApp.git'
            }
        }
  //      stage("Static Code Analysis - SonarQube") {
 //           agent any
//            steps {
//                withSonarQubeEnv('sonarqube') {
//                    sh 'mvn sonar:sonar -Dsonar.host.url=http://13.250.115.89:9000/ -Dsonar.login=1c96b646b7ce4a813dc88aa9670a98ecb776c460 -Dsonar.sources=. -Dsonar.tests=. -Dsonar.test.inclusions=**/test/java/servlet/createpage_junit.java -Dsonar.exclusions=**/test/java/servlet/createpage_junit.java'
//                }
 //           }
 //       }
         stage("Compile - Maven") {
            agent any
            steps {
               sh 'mvn clean install'
               
            }
        }
        stage('Binary Upload - Artifactory') {
       
            rtMaven.tool = "maven"
            rtMaven.deployer releaseRepo:'devopstoronto-release-local', snapshotRepo:'devopstoronto-snapshot-local', server: server
            rtMaven.resolver releaseRepo:'devopstoronto-release', snapshotRepo:'devopstoronto-snapshot', server: server
        }
    }
}
