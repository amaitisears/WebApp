pipeline{
    agent any
    tools {
        maven 'maven'
    }
    
    def server = Artifactory.server "artifactory"
    def rtMaven = Artifactory.newMavenBuild()
    rtMaven.tool = "maven"
    
    stages{
        stage("Source Control -Git Checkout"){
            steps{
                git url: 'https://github.com/amaitisears/WebApp.git'
            }
        }
  //      stage("Static Code Analysis - SonarQube") {
 //           agent any
//            steps {
//                withSonarQubeEnv('sonarqube') {
//                    sh 'mvn sonar:sonar -Dsonar.host.url=http://13.250.115.89:9000/ -Dsonar.login=1c96b646b7ce4a813dc88aa9670a98ecb776c460 -Dsonar.sources=. -Dsonar.tests=. -Dsonar.test.inclusions=**/test/java/servlet/createpage_junit.java -Dsonar.exclusions=**/test/java/servlet/createpage_junit.java'
//                }
 //           }
 //       }
         stage("Compile - Maven") {
            agent any
            steps {
               sh 'mvn clean install'
               
            }
        }
        stage('Binary Upload - Artifactory') {
        
            rtMavenResolver (
                id: 'resolver-unique-id',
                serverId: 'artifactory',
                releaseRepo: 'devopstoronto-release',
                snapshotRepo: 'devopstoronto-snapshot'
            )  
 
            rtMavenDeployer (
                id: 'deployer-unique-id',
                serverId: 'artifactory',
                releaseRepo: 'devopstoronto-release-local',
                snapshotRepo: 'devopstoronto-snapshot-local',
                // By default, 3 threads are used to upload the artifacts to Artifactory. You can override this default by setting:
                threads: 6
            )         
            
            rtMavenRun (
                // Tool name from Jenkins configuration.
                //tool: MAVEN_TOOL,
                pom: 'pom.xml',
                goals: 'clean install',
                // Maven options.
                opts: '-Xms1024m -Xmx4096m',
                resolverId: 'resolver-unique-id',
                deployerId: 'deployer-unique-id',
                // If the build name and build number are not set here, the current job name and number will be used:
                //buildName: 'my-build-name',
                //buildNumber: '17'
            )
      
        }
    }
}
